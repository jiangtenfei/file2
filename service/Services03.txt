常见的DNS服务器都有那些?
缓存DNS服务器  根域DNS服务器  一级DNS服务器 
二级DNS服务器  三级DNS服务器   主DNS服务器  从DNS服务器

常见的DNS服务器 资源解析记录  都有那些?
   NS记录       A记录

####################################################
Split分离解析

• 当收到客户机的DNS查询请求的时候
– 能够区分客户机的来源地址
– 为不同类别的客户机提供不同的解析结果(IP地址
– 当不同的客户机,寻求同一个域名的解析,解析结果不同
– 目的:为客户机提供网络中最近的资源


• 环境及需求
– 权威DNS:svr7.tedu.cn 192.168.4.7
– 负责区域:tedu.cn
– A记录分离解析 —— 以 www.tedu.cn 为例

客户机来自 解析结果
         192.168.4.207             ------->    192.168.4.100
               其他地址                ------->    1.2.3.4

 
分离解析:
 1.匹配原则:  由上到下,匹配及停止
 2.所有的客户端,均要找到自己匹配的一类
 3.所有的zone必须在view中

view "nsd"  {
   match-clients  {  192.168.4.207;  }
   zone "tedu.cn" IN {
     ...... tedu.cn.zone;
  }; };                                                              

view "other"   {
   match-clients  {   any;  }
   zone "tedu.cn" IN {
     ...... tedu.cn.other;
  }; };




#####################################################
构建分离解析
虚拟机A:
[root@svr7 ~]# vim /etc/named.conf 
view "nsd"  {
   match-clients   {  192.168.4.207;   };   
  zone "tedu.cn" IN {
        type master;
        file "tedu.cn.zone";
  };
};
view "other"  {
   match-clients   {  any;   };
  zone "tedu.cn" IN {
        type master;
        file "tedu.cn.other";
  };
};

分别建立tedu.cn.zone与tedu.cn.other地址库文件,写入不同的解析结果
验证,分别在两台虚拟机上,解析nslookup www.tedu.cn 192.168.4.7

############################################################
多区域的分离解析

1.每一个view中,zone的数量以及域名,都必须一致

view "nsd"  {
   match-clients   {  192.168.4.207;   };

  zone "tedu.cn" IN {
        type master;
        file "tedu.cn.zone";
  };
  zone "qq.com" IN {
        type master;
        file "qq.com.zone";
  };
};

view "other"  {
   match-clients   {  any;   };

  zone "tedu.cn" IN {
        type master;
        file "tedu.cn.other";
  };
  zone "qq.com" IN {
        type master;
        file "qq.com.other";
  };
};

################################################

acl地址列表
• 为大批量的客户机地址建立列表

acl  test  { 192.168.4.207; 192.168.4.1; 192.168.4.2;
             192.168.4.10; 192.168.4.20; 192.168.4.30;   };


view "nsd"  {
   match-clients   {  test;   };
......

################################################
RAID阵列概述
• 廉价冗余磁盘阵列
– 通过硬件/软件技术,将多个较小/低速的磁盘整合成一个大磁盘

– 不同RAID级别的功能、特性各不相同


RAID 0,条带模式
– 同一个文档分散存放在不同磁盘
– 并行写入以提高效率
– 至少由两块磁盘组成

• RAID 1,镜像模式
– 一个文档复制成多份,分别写入不同磁盘
– 多份拷贝提高可靠性,效率无提升
– 至少由两块磁盘组成

• RAID5,高性价比模式
– 相当于RAID0和RAID1的折中方案
– 需要至少一块磁盘的容量来存放校验数据
– 至少由三块磁盘组成


• RAID6,高性价比/可靠模式
– 相当于扩展的RAID5阵列,提供2份独立校验方案
– 需要至少两块磁盘的容量来存放校验数据
– 至少由四块磁盘组成


• RAID 0+1/RAID 1+0
– 整合RAID 0、RAID 1的优势
– 并行存取提高效率、镜像写入提高可靠性
– 至少由四块磁盘组成


• 硬RAID:由RAID控制卡管理阵列
– 主板 --->阵列卡--->磁盘--->操作系统---> 数据

#####################################################
进程管理

    程序:静态的代码, 占用硬盘空间

    进程:动态的代码, 占用cpu 内存
  
           父进程\子进程

    标识:PID编号
##############################################
查看进程

  systemd:所有进程的父进程

• pstree — Processes Tree
– 格式:pstree [选项] [PID或用户名]
• 常用命令选项
– -a:显示完整的命令行
– -p:列出对应PID编号

[root@svr7 /]# pstree lisi
bash───vim
[root@svr7 /]# pstree -p lisi
bash(6703)───vim(6739)
[root@svr7 /]# pstree -ap lisi
bash,6703
  └─vim,6739 a.txt

[root@svr7 /]# pstree      #显示整个进程树

######################################################
• ps aux 操作
– 列出正在运行的所有进程

用户 进程ID %CPU %内存 虚拟内存 固定内存 终端 状态 起始时间 CPU时间 程序指令


• ps -elf 操作

  PPID:父进程的PID号

######################################################
进程动态排名
• top 交互式工具
– 格式:top [-d 刷新秒数] [-U 用户名]
   按P 按照CPU进行排序
   按M 按照内存进行排序

#####################################################

检索进程
• pgrep — Process Grep
– 用途:pgrep [选项]... 查询条件

• 常用命令选项
– -l:输出进程名,而不仅仅是 PID
– -U:检索指定用户的进程
– -t:检索指定终端的进程
– -x:精确匹配完整的进程名

[root@svr7 /]# pgrep  -l  a
[root@svr7 /]# pgrep  -l log
[root@svr7 /]# pgrep  -l cron

[root@svr7 /]# pgrep -U lisi
[root@svr7 /]# pgrep -lU lisi

[root@svr7 /]# pgrep -lU lisi  -t pts/1
[root@svr7 /]# pgrep -lU lisi  -t pts/2

[root@svr7 /]# who   #查看正在登陆的用户信息

####################################################
进程的前后台调度


在命令行末尾添加“&”符号,不占用当前终端,正在运行放入后台

• Ctrl + z 组合键
– 挂起当前进程(暂停并转入后台)
• jobs 命令
– 查看后台任务列表
• fg 命令
– 将后台任务恢复到前台运行
• bg 命令
– 激活后台被挂起的任务

####################################################
[root@svr7 ~]# sleep 800 &     #正在运行放入后台
[root@svr7 ~]# jobs            #查看后台进程
[root@svr7 ~]# sleep 700        
^Z                             #按Ctrl+z暂停放入后台
[2]+  已停止               sleep 700
[root@svr7 ~]# jobs             
[root@svr7 ~]# bg  2            #让后台暂停的进程继续运行
[2]+ sleep 700 &
[root@svr7 ~]# jobs
[root@svr7 ~]# fg  1            #将后台编号为1的进程恢复到前台
sleep 800
^C                             #按Ctrl+c结束进程
[root@svr7 ~]# jobs
[root@svr7 ~]# fg  2
sleep 700
^C
#####################################################
• 干掉进程的不同方法
– Ctrl+c 组合键,中断当前命令程序
– kill [-9] PID... 
– killall [-9] 进程名...
– pkill 查找条件

[root@svr7 ~]# sleep 100 &
[root@svr7 ~]# jobs -l
[root@svr7 ~]# kill 8248
[root@svr7 ~]# jobs -l

[root@svr7 ~]# sleep 800 &
[root@svr7 ~]# sleep 900 &
[root@svr7 ~]# jobs 

[root@svr7 ~]# killall sleep
[root@svr7 ~]# jobs 

####################################################
 杀死一个用户开启的所有进程(强制踢出一个用户)
[root@svr7 ~]# killall -9 -u lisi

#################################################
日志管理

日志的功能
• 系统和程序的“日记本”
– 记录系统、程序运行中发生的各种事件
– 通过查看日志,了解及排除故障


常见的日志文件

 /var/log/messages 记录内核消息、各种服务的公共消息
 /var/log/dmesg    记录系统启动过程的各种消息
 /var/log/cron     记录与cron计划任务相关的消息
 /var/log/maillog  记录邮件收发相关的消息
 /var/log/secure   记录与访问限制相关的安全消息

#############################################
日志分析
  
• 通用分析工具
– tail、tailf(实时跟踪日志消息)、less、grep等文本浏览/检索命令
– awk、sed等格式化过滤工具

######################################################
• users、who、w 命令
– 查看已登录的用户信息,详细度不同
• last、lastb 命令
– 查看最近登录成功/失败的用户信息

[root@svr7 ~]# users
[root@svr7 ~]# who
[root@svr7 ~]# w

[root@svr7 ~]# last -2      #最近登录成功
[root@svr7 ~]# lastb -2     #最近登录失败

######################################################
• Linux内核定义的事件紧急程度
– 分为 0~7 共8种优先级别
– 其数值越小,表示对应事件越紧急/重要

  0  EMERG（紧急）	     会导致主机系统不可用的情况
  1  ALERT（警告）	     必须马上采取措施解决的问题
  2  CRIT（严重）	     比较严重的情况
  3  ERR（错误）	     运行出现错误
  4  WARNING（提醒）     可能会影响系统功能的事件
  5  NOTICE（注意）       不会影响系统但值得注意
  6  INFO（信息）	      一般信息
  7  DEBUG（调试）	    程序或系统调试信息等



• 常见用法
– journalctl  |  grep   关键词
– journalctl  -u  服务名      [-p 优先级]
– journalctl  -n  消息条数

[root@svr7 ~]#  yum -y install httpd
[root@svr7 ~]#  systemctl restart httpd

[root@svr7 ~]#  journalctl  -u httpd

[root@svr7 ~]#  journalctl  -n 10
[root@svr7 ~]#  journalctl  -n 20

#############################################




















































































































































































































































































































































































































































 
